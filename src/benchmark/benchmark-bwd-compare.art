

fn bwd_comparison_benchmark(device: AccDevice, block_size: i32, attempts_per_thread: i32) {
	// TODO: release resources


	QueueBenchmark {
		enum_param_names = @|enum_param| {
			enum_param("block_size"); enum_param("attempts_per_thread");
		},

		enum_param_values = @|enum_param_i32, _enum_param_f32| {
			enum_param_i32(block_size); enum_param_i32(attempts_per_thread);
		},

		reset = @|queue| {
			for grid in device.launch_1d(1, 1) {
				queue.reset(grid);
			}
		},

		run = @|queue, num_threads, _i| {
			for grid in device.launch_1d(div_up(num_threads, block_size), block_size) {
				for wave in grid.waves() {
					for thread in wave.threads() {
						let thread_id = wave.idx() * wave.num_threads() + thread.idx(0);

						if thread_id < num_threads as u32 {
							for _ in range(0, attempts_per_thread) {
								for queue.push(thread) { 42 };

								wave.barrier();

								for _value in queue.pop(thread) {};

								wave.barrier();
							}
						}
					}
				}
			}
		},

		read_stats = @|| {
			init_benchmark_stats()
		}
	}
}

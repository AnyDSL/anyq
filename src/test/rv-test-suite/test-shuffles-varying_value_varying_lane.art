
// cascade of 2x extract + 1x insert to build a new vector

// inst_stats: extractelement(16), insertelement(8)


fn @loop_body(lane: i32, vec_width: i32, read: fn(i32)->i32, write: fn(i32, i32)->(), _global: fn(i32)->&mut i32) -> () {
	let mydata = read(lane);

	let shuffle = shuffle_i32(lane, vec_width);

	let new_data = shuffle(mydata, 7 - mydata);

	write(lane, new_data);
}

fn expected_result(_data: fn(i32)->i32, _global: fn(i32)->&mut i32) -> (fn(i32)->i32, i32) {
	let values = [7, 6, 5, 4, 3, 2, 1, 0];
	let result = 10;

	(|i| values(i), result)
}

// works
fn @shuffle_i32(self: i32, vec_width: i32) -> fn(i32, i32) -> i32 {
	@|value: i32, src_lane: i32| -> i32 {
		let mut result:i32 = self; // self is needed to make result marked as varying
		for l in unroll(0, vec_width) {
			let lane_src_lane = rv_extract_i32(src_lane, l);
			let lane_value = rv_extract_i32(value, lane_src_lane);
			result = rv_insert_i32(result, l, lane_value);
		}
		result
	}
}
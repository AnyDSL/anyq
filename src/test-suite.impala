
fn main() -> i32 {
	let device = createAccDevice();

	let group_size = 128;
	let num_groups = 4;

	let num_globals = 4;
	let num_locals = num_groups * group_size;

	let init = setup_input(num_globals, num_locals);
	let test = createIntrinsicsTest(device, num_globals, init(0), num_locals, init(1));

	with read, write, global, device_failed_flag, validate in test.run_test() {

		with grid, intrinsics in device.launch_1d(num_groups, group_size) {

			test_body(grid, intrinsics, read, write, global);

		}

		let expected = expected_result(init(0), init(1));
		let expected_global = expected(0);
		let expected_local = expected(1);

		validate(
			@|global, value| { value == expected_global(global) },
			@|local, value| { value == expected_local(local) },
			true
		)
	}

	test.finish()
}

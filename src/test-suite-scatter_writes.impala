fn @setup_input(_num_globals: i32, _num_locals: i32) -> (fn(i32)->i32, fn(i32)->i32) {
	let global = @|_: i32| 0;
	let local  = @|l: i32| l;
	(global, local)
}

fn @test_body(grid: gpu_grid_context, _intrinsics: Intrinsics, read: ReadFn, write: WriteFn, _global: GlobalFn) -> () {
	for thread in grid.threads() {
		let tidx = thread.idx(0) as i32;
		let mydata = read(tidx);

		//let newdata = if mydata & 1 == 0 { mydata } else { -mydata };
		//write(tidx, newdata);

		if mydata & 1 != 0 {
			write(tidx, -mydata);
		}
	}
}

fn @expected_result(_global: fn(i32)->i32, _local: fn(i32)->i32) -> (fn(i32)->i32, fn(i32)->i32) {
	let values = |l: i32| if l & 1 == 0 { l } else { -l };
	let result = |_: i32| 0;

	(result, values)
}
